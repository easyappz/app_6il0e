openapi: 3.0.0
info:
  title: Social App API
  version: "1.4.0"
  description: |
    Unified API schema for the Social App.
    General response shape: { success: boolean, data?: any, error?: string }
servers:
  - url: http://localhost:3001
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    AuthorizationHeader:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      description: Bearer JWT token. Format: "Bearer <token>"
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          nullable: true
        error:
          type: string
          nullable: true
          example: Error message
    User:
      type: object
      description: Sanitized user returned by auth and user endpoints
      properties:
        id:
          type: string
          example: "665f1c2b9a3a8f0012abcd34"
        username:
          type: string
          example: johndoe
        email:
          type: string
          example: john@example.com
        bio:
          type: string
          example: Hello, I am John
        avatarUrl:
          type: string
          example: https://example.com/avatar.png
        createdAt:
          type: string
          format: date-time
          example: 2024-06-04T10:15:30.000Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-04T10:15:30.000Z
    PostUser:
      type: object
      description: User object embedded in Post documents (limited fields)
      properties:
        _id:
          type: string
          example: "665f1c2b9a3a8f0012abcd34"
        username:
          type: string
          example: johndoe
        avatarUrl:
          type: string
          example: https://example.com/avatar.png
    PostComment:
      type: object
      properties:
        _id:
          type: string
          example: "665f1c2b9a3a8f0012abce01"
        author:
          $ref: '#/components/schemas/PostUser'
        text:
          type: string
          example: Nice post!
        createdAt:
          type: string
          format: date-time
          example: 2024-06-04T10:15:30.000Z
    Post:
      type: object
      properties:
        _id:
          type: string
          example: "665f1c2b9a3a8f0012abcf77"
        author:
          $ref: '#/components/schemas/PostUser'
        content:
          type: string
          example: Hello world!
        likes:
          type: array
          description: Array of user ids who liked the post
          items:
            type: string
            example: "665f1c2b9a3a8f0012abcd34"
        comments:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
        createdAt:
          type: string
          format: date-time
          example: 2024-06-04T10:15:30.000Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-04T10:15:30.000Z
    ConversationPreview:
      type: object
      description: Conversation preview for current user
      properties:
        _id:
          type: string
          example: "66a1c2b9a3a8f0012abcd310"
        otherParticipant:
          type: object
          nullable: true
          properties:
            _id:
              type: string
              example: "665f1c2b9a3a8f0012abcd34"
            username:
              type: string
              example: johndoe
            avatarUrl:
              type: string
              example: https://example.com/avatar.png
        lastMessageAt:
          type: string
          format: date-time
          nullable: true
          example: 2025-01-01T12:00:00.000Z
        lastMessageText:
          type: string
          example: Hello!
        lastMessageAuthor:
          type: string
          nullable: true
          example: "665f1c2b9a3a8f0012abcd34"
        unreadCount:
          type: integer
          example: 3
    Conversation:
      type: object
      description: Full conversation document
      properties:
        _id:
          type: string
        participants:
          type: array
          items:
            type: string
        lastMessageAt:
          type: string
          format: date-time
          nullable: true
        lastMessageText:
          type: string
        lastMessageAuthor:
          type: string
          nullable: true
        unreadCountByUser:
          type: object
          additionalProperties:
            type: integer
          description: Mapping of userId -> unread count
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Message:
      type: object
      properties:
        _id:
          type: string
        conversation:
          type: string
        sender:
          type: string
        recipient:
          type: string
        text:
          type: string
        readAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
paths:
  /api/health:
    get:
      summary: Health check
      description: Returns API health status and uptime
      x-auth: false
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      status: ok
                      uptime: 123.45
                      timestamp: 2024-06-04T10:15:30.000Z
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/hello:
    get:
      summary: Simple hello endpoint
      x-auth: false
      responses:
        '200':
          description: Hello message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      message: Hello from API!
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/status:
    get:
      summary: API status endpoint
      x-auth: false
      responses:
        '200':
          description: Status payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      status: ok
                      timestamp: 2024-06-04T10:15:30.000Z
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/auth/register:
    post:
      summary: Register a new user
      x-auth: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
            examples:
              example-1:
                value:
                  username: johndoe
                  email: john@example.com
                  password: secret123
      responses:
        '201':
          description: Registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        email: john@example.com
                        bio: ""
                        avatarUrl: ""
                        createdAt: 2024-06-04T10:15:30.000Z
                        updatedAt: 2024-06-04T10:15:30.000Z
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: username, email and password are required
                weak:
                  value:
                    success: false
                    error: Password must be at least 6 characters
        '409':
          description: Duplicate email or username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                conflict:
                  value:
                    success: false
                    error: User with this email already exists
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/auth/login:
    post:
      summary: Login with email or username
      x-auth: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [emailOrUsername, password]
              properties:
                emailOrUsername:
                  type: string
                password:
                  type: string
            examples:
              example-1:
                value:
                  emailOrUsername: johndoe
                  password: secret123
      responses:
        '200':
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        email: john@example.com
                        bio: ""
                        avatarUrl: ""
                        createdAt: 2024-06-04T10:15:30.000Z
                        updatedAt: 2024-06-04T10:15:30.000Z
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: emailOrUsername and password are required
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalid:
                  value:
                    success: false
                    error: Invalid credentials
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/users/me:
    get:
      summary: Get current user profile
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: Current user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      id: 665f1c2b9a3a8f0012abcd34
                      username: johndoe
                      email: john@example.com
                      bio: ""
                      avatarUrl: ""
                      createdAt: 2024-06-04T10:15:30.000Z
                      updatedAt: 2024-06-04T10:15:30.000Z
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
                format:
                  value:
                    success: false
                    error: Invalid Authorization header format. Expected: Bearer <token>
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
    patch:
      summary: Update current user profile
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                avatarUrl:
                  type: string
                username:
                  type: string
            examples:
              example-1:
                value:
                  bio: New bio
                  avatarUrl: https://example.com/avatar.png
                  username: johnny
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      id: 665f1c2b9a3a8f0012abcd34
                      username: johnny
                      email: john@example.com
                      bio: New bio
                      avatarUrl: https://example.com/avatar.png
                      createdAt: 2024-06-04T10:15:30.000Z
                      updatedAt: 2024-06-05T09:00:00.000Z
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                empty:
                  value:
                    success: false
                    error: username cannot be empty
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '409':
          description: Username already taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                conflict:
                  value:
                    success: false
                    error: Username is already taken
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/users/{id}:
    get:
      summary: Get user by id
      x-auth: false
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      id: 665f1c2b9a3a8f0012abcd34
                      username: johndoe
                      email: john@example.com
                      bio: ""
                      avatarUrl: ""
                      createdAt: 2024-06-04T10:15:30.000Z
                      updatedAt: 2024-06-04T10:15:30.000Z
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/posts:
    post:
      summary: Create a post
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [content]
              properties:
                content:
                  type: string
            examples:
              example-1:
                value:
                  content: Hello world!
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      _id: 665f1c2b9a3a8f0012abcf77
                      author:
                        _id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        avatarUrl: ""
                      content: Hello world!
                      likes: []
                      comments: []
                      createdAt: 2024-06-04T10:15:30.000Z
                      updatedAt: 2024-06-04T10:15:30.000Z
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Content is required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/posts/feed:
    get:
      summary: Get global posts feed
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: query
          name: page
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          schema:
            type: integer
            example: 20
        - in: query
          name: commentsLimit
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      - _id: 665f1c2b9a3a8f0012abcf77
                        author:
                          _id: 665f1c2b9a3a8f0012abcd34
                          username: johndoe
                          avatarUrl: ""
                        content: Hello world!
                        likes:
                          - 665f1c2b9a3a8f0012abce55
                        comments:
                          - _id: 665f1c2b9a3a8f0012abce01
                            author:
                              _id: 665f1c2b9a3a8f0012abce55
                              username: jane
                              avatarUrl: ""
                            text: Nice post!
                            createdAt: 2024-06-04T10:16:00.000Z
                        createdAt: 2024-06-04T10:15:30.000Z
                        updatedAt: 2024-06-04T10:15:30.000Z
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/posts/{id}:
    get:
      summary: Get post by id
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      _id: 665f1c2b9a3a8f0012abcf77
                      author:
                        _id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        avatarUrl: ""
                      content: Hello world!
                      likes:
                        - 665f1c2b9a3a8f0012abce55
                      comments:
                        - _id: 665f1c2b9a3a8f0012abce01
                          author:
                            _id: 665f1c2b9a3a8f0012abce55
                            username: jane
                            avatarUrl: ""
                          text: Nice post!
                          createdAt: 2024-06-04T10:16:00.000Z
                      createdAt: 2024-06-04T10:15:30.000Z
                      updatedAt: 2024-06-04T10:15:30.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalid:
                  value:
                    success: false
                    error: Invalid post id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: Post not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/posts/{id}/like:
    post:
      summary: Like a post
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Liked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      postId: 665f1c2b9a3a8f0012abcf77
                      likesCount: 5
        '400':
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalid:
                  value:
                    success: false
                    error: Invalid post id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: Post not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
    delete:
      summary: Unlike a post
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unliked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      postId: 665f1c2b9a3a8f0012abcf77
                      likesCount: 4
        '400':
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalid:
                  value:
                    success: false
                    error: Invalid post id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: Post not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/posts/{id}/comment:
    post:
      summary: Add a comment to the post
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text:
                  type: string
            examples:
              example-1:
                value:
                  text: Nice post!
      responses:
        '201':
          description: Comment added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      postId: 665f1c2b9a3a8f0012abcf77
                      comment:
                        _id: 665f1c2b9a3a8f0012abce01
                        author:
                          _id: 665f1c2b9a3a8f0012abcd34
                          username: johndoe
                          avatarUrl: ""
                        text: Nice post!
                        createdAt: 2024-06-04T10:16:00.000Z
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalidId:
                  value:
                    success: false
                    error: Invalid post id
                missingText:
                  value:
                    success: false
                    error: Text is required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: Post not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/users/{id}/posts:
    get:
      summary: Get posts by user id
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of user's posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      - _id: 665f1c2b9a3a8f0012abcf77
                        author:
                          _id: 665f1c2b9a3a8f0012abcd34
                          username: johndoe
                          avatarUrl: ""
                        content: My first post
                        likes: []
                        comments: []
                        createdAt: 2024-06-04T10:15:30.000Z
                        updatedAt: 2024-06-04T10:15:30.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                invalid:
                  value:
                    success: false
                    error: Invalid user id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                missing:
                  value:
                    success: false
                    error: Authorization header is missing
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                notFound:
                  value:
                    success: false
                    error: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                error:
                  value:
                    success: false
                    error: Unexpected error
  /api/messages/conversations:
    get:
      summary: List user conversations (1:1)
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: query
          name: page
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          schema:
            type: integer
            example: 20
      responses:
        '200':
          description: List of conversations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                ok:
                  value:
                    success: true
                    data:
                      items:
                        - _id: 66a1c2b9a3a8f0012abcd310
                          otherParticipant:
                            _id: 665f1c2b9a3a8f0012abcd34
                            username: johndoe
                            avatarUrl: https://example.com/a.png
                          lastMessageAt: 2025-01-01T12:00:00.000Z
                          lastMessageText: Hey!
                          lastMessageAuthor: 665f1c2b9a3a8f0012abcd34
                          unreadCount: 2
                      page: 1
                      limit: 20
                      total: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
    post:
      summary: Create or get a 1:1 conversation with participant
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [participantId]
              properties:
                participantId:
                  type: string
            examples:
              sample:
                value:
                  participantId: 665f1c2b9a3a8f0012abcd34
      responses:
        '200':
          description: Conversation preview
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      _id: 66a1c2b9a3a8f0012abcd310
                      otherParticipant:
                        _id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        avatarUrl: https://example.com/a.png
                      lastMessageAt: 2025-01-01T12:00:00.000Z
                      lastMessageText: ''
                      lastMessageAuthor: null
                      unreadCount: 0
        '400':
          description: Invalid input
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                invalid:
                  value: { success: false, error: Invalid participantId }
        '404':
          description: Participant not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                notFound:
                  value: { success: false, error: Participant not found }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
  /api/messages/conversations/{id}:
    get:
      summary: Get conversation by id (if participant)
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Conversation preview
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      _id: 66a1c2b9a3a8f0012abcd310
                      otherParticipant:
                        _id: 665f1c2b9a3a8f0012abcd34
                        username: johndoe
                        avatarUrl: https://example.com/a.png
                      lastMessageAt: 2025-01-01T12:00:00.000Z
                      lastMessageText: Hey!
                      lastMessageAuthor: 665f1c2b9a3a8f0012abcd34
                      unreadCount: 2
        '400':
          description: Invalid id
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                invalid:
                  value: { success: false, error: Invalid conversation id }
        '403':
          description: Forbidden
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                forbidden:
                  value: { success: false, error: Access denied: not a participant }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                notFound:
                  value: { success: false, error: Conversation not found }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
  /api/messages/conversations/{id}/messages:
    get:
      summary: List messages in a conversation
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, example: 1 }
        - in: query
          name: limit
          schema: { type: integer, example: 30 }
      responses:
        '200':
          description: Messages list
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      items:
                        - _id: 66a1c2b9a3a8f0012abcd400
                          sender: 665f1c2b9a3a8f0012abcd34
                          recipient: 665f1c2b9a3a8f0012abce55
                          text: Hi
                          createdAt: 2025-01-01T12:00:01.000Z
                          updatedAt: 2025-01-01T12:00:01.000Z
                          readAt: null
                      page: 1
                      limit: 30
                      total: 1
        '400':
          description: Invalid id
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                invalid:
                  value: { success: false, error: Invalid conversation id }
        '403':
          description: Forbidden
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                forbidden:
                  value: { success: false, error: Access denied: not a participant }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                notFound:
                  value: { success: false, error: Conversation not found }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
    post:
      summary: Send a message in a conversation
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text:
                  type: string
            examples:
              sample:
                value:
                  text: Hello there!
      responses:
        '201':
          description: Message sent
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      message:
                        _id: 66a1c2b9a3a8f0012abcd400
                        conversation: 66a1c2b9a3a8f0012abcd310
                        sender: 665f1c2b9a3a8f0012abcd34
                        recipient: 665f1c2b9a3a8f0012abce55
                        text: Hello there!
                        readAt: null
                        createdAt: 2025-01-01T12:00:01.000Z
                        updatedAt: 2025-01-01T12:00:01.000Z
                      conversation:
                        _id: 66a1c2b9a3a8f0012abcd310
                        otherParticipant:
                          _id: 665f1c2b9a3a8f0012abce55
                          username: jane
                          avatarUrl: https://example.com/b.png
                        lastMessageAt: 2025-01-01T12:00:01.000Z
                        lastMessageText: Hello there!
                        lastMessageAuthor: 665f1c2b9a3a8f0012abcd34
                        unreadCount: 0
        '400':
          description: Invalid input
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                invalid:
                  value: { success: false, error: Text is required }
        '403':
          description: Forbidden
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                forbidden:
                  value: { success: false, error: Access denied: not a participant }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                notFound:
                  value: { success: false, error: Conversation not found }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
  /api/messages/conversations/{id}/read:
    post:
      summary: Mark incoming messages as read (optionally before a date)
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                before:
                  type: string
                  format: date-time
            examples:
              sample:
                value:
                  before: 2025-01-01T12:00:00.000Z
      responses:
        '200':
          description: Read state updated
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      conversationId: 66a1c2b9a3a8f0012abcd310
                      unreadCount: 0
        '400':
          description: Invalid input
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                invalid:
                  value: { success: false, error: Invalid conversation id }
        '403':
          description: Forbidden
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                forbidden:
                  value: { success: false, error: Access denied: not a participant }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                notFound:
                  value: { success: false, error: Conversation not found }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
  /api/messages/unread-count:
    get:
      summary: Get total unread messages count for current user
      x-auth: true
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: Unread counter
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                ok:
                  value:
                    success: true
                    data:
                      unread: 4
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                unauth:
                  value: { success: false, error: Authorization header is missing }
        '500':
          description: Error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiResponse' }
              examples:
                err:
                  value: { success: false, error: Unexpected error }
